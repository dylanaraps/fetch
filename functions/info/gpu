#!/usr/bin/env bash
# vim: fdm=marker:noai:ts=4:sw=4
#
# Neofetch gpu detection.

getgpu () {
   case "$os" in
       "Linux")
            gpu="$(PATH="/sbin:$PATH" lspci | grep -F "3D")"

            # If a GPU with a prefix of '3D' doesn't exist
            # fallback to looking for a prefix of 'VGA'
            [ -z "$gpu" ] && \
                gpu="$(PATH="/sbin:$PATH" lspci | grep -F "VGA")"

            gpu="${gpu//??':'??'.'?}"

            # Count the number of GPUs
            count="$(printf "%s" "$gpu" | uniq -c)"
            count="${count/ VGA*}"
            count="${count/ 3D*}"

            # If there's more than one gpu
            # Display the count.
            if [ "$count" -gt 1 ]; then
                count=" x $count"
            else
                unset count
            fi

            # Format the output
            gpu="${gpu/* VGA compatible controller: }"
            gpu="${gpu/* 3D controller: }"
            gpu="${gpu/(rev*)}"

            case "$gpu" in
                intel*)
                    gpu="Intel Integrated Graphics"
                ;;

                advanced*)
                    gpu="${gpu/Advanced Micro Devices, Inc\. }"
                    gpu="${gpu/'[AMD/ATI]' }"
                    gpu="${gpu/Tahiti PRO}"
                    gpu="${gpu/Seymour}"
                    gpu="${gpu/Cayman}"
                    gpu="${gpu/Richland}"
                    gpu="${gpu/Pitcairn}"
                    gpu="${gpu/Broadway}"
                    gpu="${gpu/XTMobility}"
                    gpu="${gpu/Mobility}"
                    gpu="${gpu/Hawaii}"
                    gpu="${gpu/Tobago}"
                    gpu="${gpu/Thames}"
                    gpu="${gpu/Kabini}"
                    gpu="${gpu/Bonaire}"
                    gpu="${gpu/XTX}"
                    gpu="${gpu/ OEM}"
                    gpu="${gpu/ Cape Verde}"
                    gpu="${gpu/ \[}"
                    gpu="${gpu/\]}"

                    brand="AMD "
                ;;

                nvidia*)
                    gpu="${gpu/NVIDIA Corporation }"
                    gpu="${gpu/G????M }"
                    gpu="${gpu/G???? }"
                    gpu="${gpu/\[}"
                    gpu="${gpu/\] }"

                    brand="NVIDIA "
                ;;

                *virtualbox*)
                    gpu="VirtualBox Graphics Adapter"
                ;;
            esac

            gpu="${brand}${gpu}"
        ;;

        "Mac OS X")
            # Use cache if it exists
            if [ -f "/Library/Caches/neofetch/gpu" ]; then
                source "/Library/Caches/neofetch/gpu"
            else
                gpu="$(system_profiler SPDisplaysDataType | awk -F': ' '/^\ *Chipset Model:/ {printf $2 ", "}')"
                gpu="${gpu//'/ $'}"
                gpu="${gpu%,*}"
                cache "gpu" "$gpu" "/Library/Caches/"
            fi
        ;;

        "iPhone OS")
            ios_model="${ios_model:-"$(uname -m)"}"
            case "$ios_model" in
                "iPhone1,1" | "iPhone1,2")
                    gpu="PowerVR MBX Lite 3D"
                ;;

                "iPhone2,1" | "iPhone3,1" | "iPhone3,2" | "iPhone3,3" | "iPod3,1" | "iPod4,1" | "iPad1,1")
                    gpu="PowerVR SGX535"
                ;;

                "iPhone4,1" | "iPad2,1" | "iPad2,2" | "iPad2,3" | "iPad2,4" | "iPad2,5" | "iPad2,6" | "iPad2,7" | "iPod5,1")
                    gpu="PowerVR SGX543MP2"
                ;;

                "iPhone5,1" | "iPhone5,2" | "iPhone5,3" | "iPhone5,4")
                    gpu="PowerVR SGX543MP3"
                ;;

                "iPhone6,1" | "iPhone6,2" | "iPad4,1" | "iPad4,2" | "iPad4,3" | "iPad4,4" | "iPad4,5" | "iPad4,6" | "iPad4,7" | "iPad4,8" | "iPad4,9")
                    gpu="PowerVR G6430"
                ;;

                "iPhone7,1" | "iPhone7,2" | "iPod7,1" | "iPad5,1" | "iPad5,2")
                    gpu="PowerVR GX6450"
                ;;

                "iPhone8,1" | "iPhone8,2" | "iPhone8,4")
                    gpu="PowerVR GT7600"
                ;;

                "iPod1,1" | "iPod2,1")
                    gpu="PowerVR MBX Lite"
                ;;

                "iPad3,1" | "iPad3,2" | "iPad3,3")
                    gpu="PowerVR SGX534MP4"
                ;;

                "iPad3,4" | "iPad3,5" | "iPad3,6")
                    gpu="PowerVR SGX554MP4"
                ;;

                "iPad5,3" | "iPad5,4")
                    gpu="PowerVR GXA6850"
                ;;

                "iPad6,3" | "iPad6,4" | "iPad6,7" | "iPad6,8")
                    gpu="PowerVR 7XT"
                ;;
            esac
        ;;

        "BSD")
            case "$distro" in
                "FreeBSD"*)
                    gpu="$(pciconf -lv 2>/dev/null | grep -B 4 "VGA" | grep "device")"
                    gpu="${gpu/*device*= }"
                    gpu="${gpu//\'}"
                ;;

                *)
                    gpu="$(glxinfo | grep -F 'OpenGL renderer string')"
                    gpu="${gpu/'OpenGL renderer string: '}"
                ;;
            esac
        ;;


        "Windows")
            gpu="$(wmic path Win32_VideoController get caption /value)"
            gpu="${gpu/Caption'='}"
        ;;
    esac

    case "$gpu_shorthand" in
        "on" | "tiny")
            gpu="${gpu// Rev\. ?}"
            gpu="${gpu//AMD*\/ATI\]/AMD}"
            gpu="${gpu// Tahiti}"
            gpu="${gpu// PRO}"
            gpu="${gpu// OEM}"
            gpu="${gpu// Mars}"
            gpu="${gpu// Series}"
            gpu="${gpu// Controller}"
            gpu="${gpu/\/*}"

            case "$gpu_shorthand" in
                "tiny")
                    gpu="${gpu/Graphics }"
                    gpu="${gpu/GeForce }"
                    gpu="${gpu/Radeon }"
                ;;
            esac
        ;;
    esac

    gpu="${gpu}${count}"
}
