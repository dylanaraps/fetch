#!/usr/bin/env bash
getpackages () {
    case "$os" in
        "Linux")
            if type -p dpkg >/dev/null 2>&1; then
                packages="$(dpkg --get-selections | grep -cv deinstall$)"

            elif type -p pacman >/dev/null 2>&1; then
                packages="$(pacman -Qq --color never | wc -l)"

            elif type -p /sbin/pkgtool >/dev/null 2>&1; then
                packages="$(ls -1 /var/log/packages | wc -l)"

            elif type -p rpm >/dev/null 2>&1; then
                packages="$(rpm -qa | wc -l)"

            elif type -p xbps-query >/dev/null 2>&1; then
                packages="$(xbps-query -l | wc -l)"

            elif type -p pkginfo >/dev/null 2>&1; then
                packages="$(pkginfo -i | wc -l)"

            elif type -p pisi >/dev/null 2>&1; then
                packages="$(pisi list-installed | wc -l)"

            elif type -p pkg >/dev/null 2>&1; then
                packages="$(ls -1 /var/db/pkg | wc -l)"

            elif type -p emerge >/dev/null 2>&1; then
                packages="$(ls -d /var/db/pkg/*/* | wc -l)"

            elif type -p nix-env >/dev/null 2>&1; then
                packages="$(ls -d -1 /nix/store/*/ | wc -l)"

            elif type -p apk >/dev/null 2>&1; then
                packages="$(apk info | wc -l)"

            elif type -p pacman-g2 >/dev/null 2>&1; then
                packages="$(pacman-g2 -Q | wc -l)"

            elif type -p cave >/dev/null 2>&1; then
                cross_packages=$(ls -d -1 /var/db/paludis/repositories/cross-installed/*/data/* | wc -l)
                packages=$(ls -d -1 /var/db/paludis/repositories/installed/data/* | wc -l)
                packages=$((packages + cross_packages))
            fi
        ;;

        "Mac OS X")
            if [ -d "/usr/local/bin" ]; then
                local_packages=$(ls -l /usr/local/bin/ | grep -v "\(../Cellar/\|brew\)" | wc -l)
                packages=$((local_packages - 1))
            fi

            if type -p port >/dev/null 2>&1; then
                port_packages=$(port installed 2>/dev/null | wc -l)
                packages=$((packages + port_packages - 1))
            fi

            if type -p brew >/dev/null 2>&1; then
                brew_packages=$(find /usr/local/Cellar -maxdepth 1 2>/dev/null | wc -l)
                packages=$((packages + brew_packages - 1))
            fi

            if type -p pkgin >/dev/null 2>&1; then
                pkgsrc_packages=$(pkgin list 2>/dev/null | wc -l)
                packages=$((packages + pkgsrc_packages))
            fi
        ;;

        *"BSD")
            if type -p pkg_info >/dev/null 2>&1; then
                packages=$(pkg_info | wc -l)

            elif type -p pkg >/dev/null 2>&1; then
                packages=$(pkg info | wc -l)
            fi
        ;;

        "Windows")
            packages=$(cygcheck -cd | wc -l)

            # Count chocolatey packages
            if [ -d "/cygdrive/c/ProgramData/chocolatey/lib" ]; then
                choco_packages=$(ls -1 /cygdrive/c/ProgramData/chocolatey/lib | wc -l)
                packages=$((packages + choco_packages))
            fi
        ;;
    esac
    packages=${packages// }
}
