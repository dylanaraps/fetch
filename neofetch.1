.TH NEOFETCH "1" "November 2016" "2.0" "User Commands"
.SH NAME
neofetch \- simple system information script

.SH SYNOPSIS
.B neofetch \fR[Optional Flags]

.SH DESCRIPTION
neofetch is a script that gathers information about your system and prints
it to the terminal next to an image, a distro's logo or any ASCII art of
your choice.

.SH OPTIONS
.TP
.B \--disable 'infoname'
Allows you to disable an info line from appearing in the output.
.br
NOTE: You can supply multiple args. eg.
.br
\'neofetch --disable cpu gpu disk shell\'
.TP
.B \--os_arch 'on/off'
Hide/Show OS architecture.
.TP
.B \--speed_type 'type'
Change the type of cpu speed to display.
.br
Possible values: current, min, max, bios,
scaling_current, scaling_min, scaling_max
.br
NOTE: This only support Linux with cpufreq.
.TP
.B \--cpu_shorthand 'type'
Shorten the output of CPU
.br
Possible values: name, speed, tiny, on, off
.TP
.B \--cpu_cores 'logical/physical/off'
Whether or not to display the number of CPU cores
.br
Note: 'physical' doesn't work on BSD.
.TP
.B \--cpu_speed 'on/off'
Hide/Show cpu speed.
.TP
.B \--cpu_temp 'on/off'
Hide/Show cpu temperature.
.br
NOTE This only works on linux.
.TP
.B \--distro_shorthand 'on/off'
Shorten the output of distro (tiny, on, off)
.br
NOTE: This option won't work in Windows (Cygwin)
.TP
.B \--kernel_shorthand 'on/off'
Shorten the output of kernel
.br
NOTE: This option won't work in BSDs (except PacBSD and PC-BSD)
.TP
.B \--uptime_shorthand 'on/off'
Shorten the output of uptime (tiny, on, off)
.TP
.B \--refresh_rate 'on/off'
Whether to display the refresh rate of each monitor
.br
Note: Unsupported on Windows
.TP
.B \--gpu_brand on/off
Enable/Disable GPU brand in output. (AMD/NVIDIA/Intel)
.TP
.B \--gtk_shorthand 'on/off'
Shorten output of gtk theme/icons
.TP
.B \--gtk2 'on/off'
Enable/Disable GTK2 theme/icons output
.TP
.B \--gtk3 'on/off'
Enable/Disable gtk3 theme/icons output
.TP
.B \--shell_path 'on/off'
Enable/Disable showing $SHELL path
.TP
.B \--shell_version 'on/off'
Enable/Disable showing $SHELL version
.TP
.B \--ip_host 'url'
URL to query for public IP
.TP
.B \--song_shorthand 'on/off'
Print the Artist/Title on seperate lines
.TP
.B \--birthday_shorthand 'on/off'
Shorten the output of birthday
.TP
.B \--birthday_time 'on/off'
Enable/Disable showing the time in birthday output
.TP
.B \--birthday_format 'format'
Format the birthday output. (Uses 'date' cmd format)

.SH TEXT FORMATTING
.TP
.B \--colors x x x x x x
Changes the text colors in this order:
title, @, underline, subtitle, colon, info
.TP
.B \--underline on/off
enable/disable the underline.
.TP
.B \--underline_char 'char'
Character to use when underlining title
.TP
.B \--bold 'on/off'
Enable/Disable bold text
.TP
.B \--prompt_height 'num'
Set this to your prompt height to fix issues
with the text going off screen at the top

.SH COLOR BLOCKS
.TP
.B \--color_blocks 'on/off'
Enable/Disable the color blocks
.TP
.B \--block_width 'num'
Width of color blocks in spaces
.TP
.B \--block_height 'num'
Height of color blocks in lines
.TP
.B \--block_range 'start' 'end'
Range of colors to print as blocks

.SH PROGRESS BARS
.TP
.B \--progress_char 'elapsed char' 'total char'
Characters to use when drawing progress bars.
.TP
.B \--progress_border on/off
Whether or not to surround the bar with '[]'
.TP
.B \--progress_length 'num'
Length in spaces to make the progress bars.
.TP
.B \--progress_colors 'num' 'num'
Colors to make the progress bar.
.br
Set in this order: elapsed, total
.TP
.B \--cpu_display       'mode'
Progress bar mode.
.br
Takes: bar, infobar, barinfo, off
.TP
.B \--memory_display    'mode'
Progress bar mode.
.br
Takes: bar, infobar, barinfo, off
.TP
.B \--battery_display   'mode'
Progress bar mode.
.br
Takes: bar, infobar, barinfo, off
.TP
.B \--disk_display      'mode'
Progress bar mode.
.br
Takes: bar, infobar, barinfo, off

.SH IMAGE
.TP
.B \--image 'type'
Image source. Where and what image we display.
.br
Possible values: wall, ascii, /path/to/img, /path/to/dir/, off
.TP
.B \--size 'size'
How to size the image.
.br
Possible values: auto, 00px, 00%, none
.TP
.B \--crop_mode 'mode'
Which crop mode to use
.br
Takes the values: normal, fit, fill
.TP
.B \--crop_offset 'value'
Change the crop offset for normal mode.
.br
Possible values: northwest, north, northeast,
west, center, east, southwest, south, southeast
.TP
.B \--xoffset 'value'
How close the image will be to the left edge of the
window in pixel. This only works with w3m.
.TP
.B \--yoffset 'value'
How close the image will be to the top edge
of the window. This only works with w3m.
.TP
.B \--bg_color 'color'
Background color to display behind transparent image.
This only works with w3m.
.TP
.B \--gap 'num'
Gap between image and text.
.br
NOTE: --gap can take a negative value which
will move the text closer to the left side.
.TP
.B \--clean
Remove all cropped images

.SH ASCII
.TP
.B \--ascii 'value'
Where to get the ASCII from
.br
Possible values: distro, /path/to/ascii
.TP
.B \--ascii_colors x x x x x x
Colors to print the ASCII art
.TP
.B \--ascii_distro 'distro'
Which Distro\'s ASCII art to print
.TP
.B \--ascii_logo_size 'size'
Size of ascii logo.
Supported distros: Arch, Gentoo, Crux, OpenBSD.
Possible values: small, normal
.TP
.B \--ascii_bold 'on/off'
Whether or not to bold the ascii logo.
.TP
.B \--logo | -L
Hide the info text and only show the ascii logo.

.SH SCREENSHOT
.TP
.B \--scrot 'path'
Take a screenshot, if path is left empty the screenshot
function will use $scrot_dir and $scrot_name.
.TP
.B \--upload | -su 'path'
Same as --scrot but uploads the scrot to a website.
.TP
.B \--image_host 'host'
Website to upload scrots to. Takes: imgur, teknik
.TP
.B \--scrot_cmd 'cmd'
Screenshot program to launch

.SH OTHER
.TP
.B \--config 'path'
Specify a path to a custom config file
.TP
.B \--config none
Launch the script without a config file
.TP
.B \--help
.TP
.B \--test
Launch the script with all functions / options enabled.
This should only be used for testing purposes, ie Travis.CI.
.TP
.B \--version
Show neofetch version.
.TP
.B \-v
Display error messages.
.TP
.B \-vv
Display a verbose log for error reporting.

.SH "SEE ALSO"
http://github.com/dylanaraps/neofetch

.SH BUGS
Report bugs to <https://github.com/dylanaraps/neofetch/issues>

.SH LICENSE

The MIT License (MIT)

Copyright (c) 2016 Dylan Araps

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the "Software"),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom
the Software is furnished to do so, subject to the following conditions:

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

.SH AUTHOR
Created by Dylan Araps.
